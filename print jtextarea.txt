import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import java.awt.print.*;
import javax.swing.plaf.basic.*;
import javax.swing.*;
import javax.swing.text.*;
import javax.swing.event.*;
import javax.swing.border.*;
import javax.swing.text.rtf.*;
import javax.swing.undo.*;
public class TestPrint extends javax.swing.JFrame implements Printable {
    protected PrintView m_printView;
     
    protected DefaultStyledDocument m_doc;
    StyleContext m_context;
     
    /** Creates new form TestPrint */
    public TestPrint() {
        initComponents();
        m_context = new StyleContext();
        m_doc = new DefaultStyledDocument(m_context);
        textArea.setDocument(m_doc);
    }
     
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jButton1 = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        setTitle("Test Print");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        jButton1.setText("print me");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, java.awt.BorderLayout.SOUTH);
        scrollPane.setMinimumSize(new java.awt.Dimension(300, 200));
        scrollPane.setPreferredSize(new java.awt.Dimension(300, 200));
        textArea.setLineWrap(true);
        textArea.setText("SOME TEXT");
        textArea.setWrapStyleWord(true);
        textArea.setMinimumSize(new java.awt.Dimension(300, 200));
        textArea.setPreferredSize(new java.awt.Dimension(300, 200));
        scrollPane.setViewportView(textArea);
        getContentPane().add(scrollPane, java.awt.BorderLayout.CENTER);
        pack();
    }//GEN-END:initComponents
     
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PrinterJob pj = PrinterJob.getPrinterJob();
        pj.setPrintable(TestPrint.this);
        if (pj.printDialog()) {
            try { pj.print(); }
            catch (PrinterException pe) {
                System.out.println(pe);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
     
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        TestPrint testPrint = new TestPrint();
        testPrint.setSize( new Dimension(300,200) );
        testPrint.pack();
        testPrint.show();
    }
     
     
    public int print(Graphics pg, PageFormat pageFormat,
    int pageIndex) throws PrinterException {
        pg.translate((int)pageFormat.getImageableX(),
        (int)pageFormat.getImageableY());
        int wPage = (int)pageFormat.getImageableWidth();
        int hPage = (int)pageFormat.getImageableHeight();
        pg.setClip(0, 0, wPage, hPage);
         
        // Only do this once per print
        if (m_printView == null) {
            BasicTextUI btui = (BasicTextUI)textArea.getUI();
            View root = btui.getRootView( textArea );
            m_printView = new PrintView(
            m_doc.getDefaultRootElement(),
            root, wPage, hPage);
        }
         
        boolean bContinue = m_printView.paintPage(pg,
        hPage, pageIndex);
        System.gc();
         
        if (bContinue)
            return PAGE_EXISTS;
        else {
            m_printView = null;
            return NO_SUCH_PAGE;
        }
    }
    class PrintView extends BoxView {
        protected int m_firstOnPage = 0;
        protected int m_lastOnPage = 0;
        protected int m_pageIndex = 0;
         
        public PrintView(Element elem, View root, int w, int h) {
            super(elem, Y_AXIS);
            setParent(root);
            setSize(w, h);
            layout(w, h);
        }
         
        public boolean paintPage(Graphics g, int hPage,
        int pageIndex) {
            if (pageIndex > m_pageIndex) {
                m_firstOnPage = m_lastOnPage + 1;
                if (m_firstOnPage >= getViewCount())
                    return false;
                m_pageIndex = pageIndex;
            }
            int yMin = getOffset(Y_AXIS, m_firstOnPage);
            int yMax = yMin + hPage;
            Rectangle rc = new Rectangle();
             
            for (int k = m_firstOnPage; k < getViewCount(); k++) {
                rc.x = getOffset(X_AXIS, k);
                rc.y = getOffset(Y_AXIS, k);
                rc.width = getSpan(X_AXIS, k);
                rc.height = getSpan(Y_AXIS, k);
                if (rc.y+rc.height > yMax)
                    break;
                m_lastOnPage = k;
                rc.y -= yMin;
                paintChild(g, rc, k);
            }
            return true;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JTextArea textArea;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
     